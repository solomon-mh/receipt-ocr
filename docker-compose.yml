services:
  postgres:
    image: postgres:15-alpine
    restart: always
    container_name: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    env_file:
      - ./backend/.env.production
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: receiptsdb
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app-network

  # -------------------------------

  backend:
    build:
      context: ./backend
    container_name: backend
    restart: always
    ports:
      - "4000:4000"
    env_file:
      - ./backend/.env.production
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  # -------------------------------
  frontend:
    build:
      context: ./frontend
    container_name: frontend
    restart: always
    ports:
      - "3000:3000"
    env_file:
      - ./frontend/.env
    depends_on:
      - backend
    networks:
      - app-network

# -------------------------------
volumes:
  db-data:

# -------------------------------
networks:
  app-network:
    driver: bridge
